#!/usr/bin/env python

# pyjackctl - The python jackdbus controller suite
# jackctl_logview - A log viewer for the python JACK dbus suite
# Copyright (C) 2007, Marc-Olivier Barre and Nedko Arnaudov.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

import pygtk
pygtk.require('2.0')
import gtk
import gtk.glade
from gobject import timeout_add
import os

log_filename = "/home/marco/.jackdbus/jackdbus.log"
log_file = open(log_filename)

class jackctl_logview(gtk.glade.XML):
	def __init__(self):
		gtk.glade.XML.__init__(self, "/usr/share/pyjackctl/data/jackctl_logview_ui.glade")
		self.event_dict = {"on_jackctl_logview_ui_destroy" : self.quit_callback,
			"on_close_button_clicked" : self.quit_callback,
			"on_clear_button_clicked" : self.clear_text_callback}
		self.signal_autoconnect(self.event_dict)
		self.log_textview = self.get_widget("log_textview")
		self.text_buffer = self.log_textview.get_buffer()
		self.auto_updater = timeout_add(250, self.update)
		for line in log_file:
			self.text_buffer.insert(self.text_buffer.get_end_iter(), line)

	def quit_callback(self, data=None):
		gtk.main_quit()
	
	def clear_text_callback(self, data=None):
		self.text_buffer.set_text("")
		
	def update(self):
		line = log_file.readline()
		while line:
			self.text_buffer.insert(self.text_buffer.get_end_iter(), line)
			line = log_file.readline()
		log_file.seek(log_file.tell())
		
		return True

	def run(self):
		gtk.main()
		return 0

jackctl_logview().run()